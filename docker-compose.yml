# version: "3.9"
---
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks: [backend]

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./monitoring/alert.rules.yml:/etc/alertmanager/alert.rules.yml:ro
      - ./monitoring/telegram.tmpl:/etc/alertmanager/telegram.tmpl:ro
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks: [backend]

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/support:/custom-grafana:ro
    networks: [backend]

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks: [backend]

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    volumes:
      - ./test-assets:/test-assets:rw
      - cookies:/srv/cookies:rw
      - input:/srv/input
      - queue:/srv/queue
      - metadata:/srv/metadata
      - stems:/srv/stems
      - output:/srv/output
      - organized:/srv/organized
      - logs:/srv/logs
      - ./temp_chunks:/srv/splitter_tmp
      - ./models:/srv/splitter_models
      - ./filebrowser/filebrowser.db:/database/filebrowser.db
      - ./filebrowser/settings.json:/config/settings.json
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    ports:
      - '8196:80'
    networks: [backend]

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks: [backend]

volumes:
  prometheus_data:
  alertmanager_data:
  cookies:
    external: true
  input:
    external: true
  queue:
    external: true
  metadata:
    external: true
  stems:
    external: true
  output:
    external: true
  organized:
    external: true
  logs:
    external: true

networks:
  backend:
    external: true
